            - نام: یک مصنوع ساخت را آپلود کنید
  موارد استفاده: actions/upload-artifact@v4.3.3
  با:
    # نام مصنوع
    name: # اختیاری، پیش‌فرض مصنوع است
    # یک فایل، دایرکتوری یا الگوی عام که توضیح می دهد چه چیزی باید آپلود شود
    مسیر:
    # رفتار مورد نظر در صورت یافتن هیچ فایلی با استفاده از مسیر ارائه شده.
گزینه های موجود:
  warn: یک اخطار صادر کنید اما عمل را انجام ندهید
  خطا: عمل را با یک پیام خطا انجام دهید
  ignore: هیچ اخطار یا خطایی را خروجی ندهید، عمل خراب نمی شود

    if-no-files-found: # اختیاری، پیش فرض هشدار است
    # مدت زمانی که پس از آن مصنوع در چند روز منقضی می شود. 0 به معنای استفاده از حفظ پیش فرض است.
حداقل 1 روز حداکثر 90 روز مگر اینکه از صفحه تنظیمات مخزن تغییر کند.

    روزهای نگهداری: # اختیاری
    # سطح فشرده سازی برای Zlib که باید در آرشیو مصنوع اعمال شود. مقدار می تواند از 0 تا 9 متغیر باشد: - 0: بدون فشرده سازی - 1: بهترین سرعت - 6: فشرده سازی پیش فرض (همانند GNU Gzip) - 9: بهترین فشرده سازی سطوح بالاتر منجر به فشرده سازی بهتر می شود، اما تکمیل آن زمان بیشتری می برد. برای فایل های بزرگی که به راحتی فشرده نمی شوند، مقدار 0 برای آپلود بسیار سریعتر توصیه می شود.

    سطح فشرده سازی: # اختیاری، پیش فرض 6 است
    # اگر درست باشد، یک مصنوع با نام منطبق قبل از آپلود یک نمونه جدید حذف می شود. اگر نادرست باشد، اگر مصنوع برای نام داده شده از قبل وجود داشته باشد، عملکرد ناموفق خواهد بود. اگر مصنوع وجود نداشته باشد، شکست نمی خورد.

    رونویسی: # اختیاری، پیش‌فرض نادرست است
                  - name: Setup .NET Core SDK
  uses: actions/setup-dotnet@v4.0.0
  with:
    # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x, 3.x, 6.0.2xx
    dotnet-version: # optional
    # Optional quality of the build. The possible values are: daily, signed, validated, preview, ga.
    dotnet-quality: # optional
    # Optional global.json location, if your global.json isn't located in the root of the repo.
    global-json-file: # optional
    # Optional package source for which to set up authentication. Will consult any existing NuGet.config in the root of the repo and provide a temporary NuGet.config using the NUGET_AUTH_TOKEN environment variable as a ClearTextPassword
    source-url: # optional
    # Optional OWNER for using packages from GitHub Package Registry organizations/users other than the current repository's owner. Only used if a GPR URL is also provided in source-url
    owner: # optional
    # Optional NuGet.config location, if your NuGet.config isn't located in the root of the repo.
    config-file: # optional
    # Optional input to enable caching of the NuGet global-packages folder
    cache: # optional
    # Used to specify the path to a dependency file: packages.lock.json. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
                 - نام: محیط Setup Node.js
  موارد استفاده: actions/setup-node@v4.0.2
  با:
    # همیشه تأیید اعتبار را در npmrc تنظیم کنید.
    همیشه-auth: # اختیاری، پیش‌فرض نادرست است
    # مشخصات نسخه نسخه مورد استفاده. مثال‌ها: 12.x، 10.15.1، >=10.15.0.
    node-version: # اختیاری
    # فایل حاوی مشخصات نسخه نسخه مورد استفاده. مثال‌ها: package.json، .nvmrc، .node-version، .tool-versions.
    node-version-file: # اختیاری
    # معماری هدف برای استفاده Node. مثال‌ها: x86، x64. به طور پیش فرض از معماری سیستم استفاده می کند.
    معماری: # اختیاری
    # اگر می‌خواهید اکشن آخرین نسخه موجود را که مشخصات نسخه را برآورده می‌کند بررسی کند، این گزینه را تنظیم کنید.
    بررسی آخرین: # اختیاری
    # رجیستری اختیاری برای تنظیم برای احراز هویت. رجیستری را در یک فایل سطح پروژه .npmrc و yarnrc. تنظیم می کند و auth را برای خواندن از env.NODE_AUTH_TOKEN تنظیم می کند.
    registry-url: # اختیاری
    # محدوده اختیاری برای احراز هویت در برابر رجیستری های محدوده. هنگام استفاده از رجیستری بسته های GitHub (https://npm.pkg.github.com/) به مالک مخزن باز می گردد.
    دامنه: # اختیاری
    # برای بیرون کشیدن توزیع های گره از نسخه های گره استفاده می شود. از آنجایی که یک پیش‌فرض وجود دارد، این معمولاً توسط کاربر ارائه نمی‌شود. هنگام اجرای این عمل در github.com، مقدار پیش فرض کافی است. هنگامی که در GHES اجرا می‌کنید، اگر با محدودیت نرخ مواجه هستید، می‌توانید یک نشانه دسترسی شخصی برای github.com ارسال کنید.
    نشانه: # اختیاری، پیش‌فرض ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # برای تعیین یک مدیر بسته برای ذخیره سازی در فهرست پیش فرض استفاده می شود. مقادیر پشتیبانی شده: npm، نخ، pnpm.
    حافظه پنهان: # اختیاری
    # برای تعیین مسیر فایل وابستگی استفاده می‌شود: package-lock.json، yarn.lock، و غیره.
    cache-dependency-path: # اختیاری
          - uses: actions/setup-node@v4
  with:
    # Version Spec of the version to use in SemVer notation.
    # It also emits such aliases as lts, latest, nightly and canary builds
    # Examples: 12.x, 10.15.1, >=10.15.0, lts/Hydrogen, 16-nightly, latest, node
    node-version: ''

    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    # If node-version and node-version-file are both provided the action will use version from node-version. 
    node-version-file: ''

    # Set this option if you want the action to check for the latest available version 
    # that satisfies the version spec.
    # It will only get affect for lts Nodejs versions (12.x, >=10.15.0, lts/Hydrogen). 
    # Default: false
    check-latest: false

    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    # Default: ''. The action use system architecture by default 
    architecture: ''

    # Used to pull node distributions from https://github.com/actions/node-versions. 
    # Since there's a default, this is typically not supplied by the user. 
    # When running this action on github.com, the default value is sufficient. 
    # When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    #
    # We recommend using a service account with the least permissions necessary. Also
    # when generating a new PAT, select the least scopes necessary.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    #
    # Default: ${{ github.server_url == 'https://github.com' && github.token || '' }}
    token: ''

    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    # Package manager should be pre-installed
    # Default: ''
    cache: ''

    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. 
    # It will generate hash from the target file for primary key. It works only If cache is specified.  
    # Supports wildcards or a list of file names for caching multiple dependencies.
    # Default: ''
    cache-dependency-path: ''

    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, 
    # and set up auth to read in from env.NODE_AUTH_TOKEN.
    # Default: ''
    registry-url: ''

    # Optional scope for authenticating against scoped registries. 
    # Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    # Default: ''
    scope: ''

    # Set always-auth option in npmrc file.
    # Default: ''
    always-auth: ''         
